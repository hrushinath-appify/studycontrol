version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7
    container_name: studycontrol-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: studycontrol
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - studycontrol-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')", "studycontrol"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API Server
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: studycontrol-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://studycontrol:studycontrol123@mongo:27017/studycontrol
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-refresh-token-secret-change-this}
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      - mongo
    ports:
      - "5000:5000"
    volumes:
      - api-uploads:/app/uploads
    networks:
      - studycontrol-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js Application
  web:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: studycontrol-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:5000/api/v1
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    depends_on:
      - api
    ports:
      - "3000:3000"
    networks:
      - studycontrol-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: studycontrol-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - api
    networks:
      - studycontrol-network

volumes:
  mongo-data:
  api-uploads:

networks:
  studycontrol-network:
    driver: bridge